@page "/learn/{StudySetId:int}"
@using Openlet.Models
@using Microsoft.EntityFrameworkCore
@using Openlet.Services
@inject OpenletContext OpenletContext
@inject UserService _userSerive

<style>
    .cardContainer{
        display: flex;
        justify-content: center;
    }
</style>

<div class="cardContainer">
    <div class="card" style="width: 18rem;">
        <div class="card-body">
            <p class="term">Term 1</p>
            <input type="text" class="form-control">
            <button type="button" class="btn btn-primary mt-2">Sumbit</button>
        </div>
    </div>
    <div class="multipleChoice">
        
    </div>
    <div class="card" style="width: 18rem;">
        <div class="card-body">
            <p>Wrong! The correct Definition is:</p>
            <p class="correct"></p>
            <button type="button" class="btn btn-primary mt-2 correctNextCard">Next Card</button>
        </div>
    </div>
</div>

@code
{
    [Parameter]
    public int StudySetId { get; set; }

    private Learn _learn;

    protected override async Task OnInitializedAsync()
    {
        var user = await _userSerive.GetUser();

        _learn = await OpenletContext.Learns
            .Where(x => x.StudySetId == StudySetId && x.User.Id == user.Id)
            .FirstOrDefaultAsync() ?? new Learn();
    }
}

